#!/bin/bash

function print_help {
    echo "Usage: ./blog <command> [OPTION]...
    new <(blog|take)> <title> [-p]      Create a new blog post
        -p                              Adds a named subfolder in the public folder for assets
    build                               Builds the blog
    serve                               Starts a local server
    help                                Prints this help message
    "
}

# Spin up a super simple dev server.
function spin_up_dev_server {
    cd build
    python3 -m http.server 8000
}

# Generate new blog posts or hot take.
function new {
    declare -a post_types
    post_types["blog"]="blog"
    post_types["take"]="takes"

    if [[ ! "$1" =~ ^(blog|take)$ ]]; then
        echo "Incorrect post type"
        print_help
        exit 1
    fi

    if [[ ! $2 ]]; then
        echo "Please specify a title."
        print_help
        exit 1
    fi

    title=$2
    date=$(date +"%Y-%m-%d")
    filename="$(date +"%Y%m%d")_$(echo "$2" | tr '[:upper:]' '[:lower:]' | sed s/\ /_/g).md"
    filepath="docs/${post_types[$1]}/$filename"

    frontmatter="---\n"
    frontmatter+="title: $title\n"
    frontmatter+="created: $date\n"
    frontmatter+="show_social_links: true\n"
    frontmatter+="tags: []\n"
    frontmatter+="---\n"

    echo -e "$frontmatter" > "$filepath"

    if [[ "-p" == "$3" ]]; then
        asset_folder="public/$1/$filename"
        mkdir -p $asset_folder
        echo "Asset folder created at $asset_folder"
    fi

    code "$filepath"
}


case $1 in
    build)
        ./build.sh
        ;;
    serve)
        spin_up_dev_server
        ;;
    help)
        print_help
        ;;
    new)
        new "$2" "$3" "$4"
        ;;
    *)
        print_help
        ;;
esac
